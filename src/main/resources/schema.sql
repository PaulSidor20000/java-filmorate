DROP table IF EXISTS genre_link;
DROP table IF EXISTS friendship;
DROP table IF EXISTS genre;
DROP table IF EXISTS likes;
DROP table IF EXISTS films;
DROP table IF EXISTS users;
DROP table IF EXISTS mpa_rating;

create table mpa_rating (
mpa_rating_id int generated by default as identity primary key,
mpa_rating_name varchar(64)
);

create table films (
film_id int generated by default as identity primary key,
name varchar(100) not null,
description varchar(255),
release_date date,
duration int,
mpa_rating_id int references mpa_rating(mpa_rating_id)
);

create table genre (
genre_id int generated by default as identity primary key,
genre_name varchar(64)
);

create table genre_link (
film_id int references films(film_id),
genre_id int references genre(genre_id),
primary key (film_id, genre_id),
CHECK (film_id > 0 AND genre_id > 0)
);

create table users (
user_id int generated by default as identity primary key,
email varchar(100),
login varchar(32) not null,
name varchar(100) not null,
birthday date not null
);

create table likes (
film_id int references films(film_id),
user_id int references users(user_id),
primary key (film_id, user_id),
CHECK (film_id > 0 AND user_id > 0)
);

create table friendship (
user1_id int,
user2_id int,
friendship_status boolean default false,
primary key (user1_id, user2_id),
CHECK (user1_id > 0 AND user2_id > 0)
);